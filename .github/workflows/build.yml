name: package

on: [push]

jobs:
  docker-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build development image
        run: |
          docker build -t openredact/frontend-dev:${GITHUB_SHA} -f frontend/Dockerfile.dev frontend
          docker tag openredact/frontend-dev:${GITHUB_SHA} openredact/frontend-dev:latest
      - name: Build production image
        run: |
          docker build -t openredact/frontend:${GITHUB_SHA} frontend
      - name: Push docker image (hash)
        run: |
          docker login -u ${{ secrets.docker_user }} -p ${{ secrets.docker_password }}
          docker push openredact/frontend:${GITHUB_SHA}
  docker-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build docker image
        run: |
          docker build --cache-from openredact/backend:latest -t openredact/backend:${GITHUB_SHA} backend
          docker tag openredact/backend:${GITHUB_SHA} openredact/backend:latest
      - name: Push docker image (hash)
        run: |
          docker login -u ${{ secrets.docker_user }} -p ${{ secrets.docker_password }}
          docker push openredact/backend:${GITHUB_SHA}

  test-app:
    runs-on: ubuntu-latest
    needs:
      - docker-frontend
      - docker-backend
    steps:
      - uses: actions/checkout@v1
      - name: Set up
        run: |
          sudo sysctl -w vm.max_map_count=262144
          docker --version
          docker-compose --version
      - name: Docker pull and start services
        run: |
          echo "${GITHUB_REF}"
          TAG=${GITHUB_SHA} docker-compose pull --quiet --parallel backend frontend
          sleep 10
      - name: Run tests
        run: |
          TAG=${GITHUB_SHA} docker-compose -f docker-compose.dev.yml run frontend-dev npm test  -- --watchAll=false
          TAG=${GITHUB_SHA} docker-compose run backend pytest --cov-report term --cov=app
      - name: Push docker images for tags
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          export TAG=${GITHUB_REF/refs\/tags\//}
          docker login -u ${{ secrets.docker_user }} -p ${{ secrets.docker_password }}
          for IMAGE in frontend-dev frontend backend; do
            docker tag openredact/${IMAGE}:${GITHUB_SHA} openredact/${IMAGE}:${TAG};
            docker push openredact/${IMAGE}:${TAG};
            docker tag openredact/${IMAGE}:${GITHUB_SHA} openredact/${IMAGE}:latest;
            docker push openredact/${IMAGE}:latest;
          done;
